---
title: "Exploring the Wide World of ggplot2 Extensions"
author: 
  - "Eric R. Scott"
  - "Kristina Riemer"
  - "Renata Diaz"
date: 2024-06-20
format: 
  uaz-revealjs: default
execute: 
  echo: true
editor: visual
---

## Learning Objectives

-   Understand where to find packages that extend `ggplot2`
-   Assemble multi-panel figures with `patchwork`
-   Make animated plots with `gganimate`
-   Visualize distributions with `ggdist`
-   Plot network data with `ggraph`

## Packages

```{r}
library(ggplot2)
library(palmerpenguins) #for example dataset
library(patchwork) #for multi-panel figures
library(gganimate) #for animated plots
```

# Extensions to `ggplot2`

There are many kinds of extensions to `ggplot2`, ranging from simple to complex, from familiar to transformative.

## General-use and modular

```{r}
#| code-line-numbers: "|1,4|2,5"
#| fig-align: center
library(ggbeeswarm)
library(ggthemes)
ggplot(penguins, aes(x = species, y = body_mass_g)) +
  geom_beeswarm() +
  theme_economist()

```

::: notes
`geom_beeswarm()` can easily be combined with other `geom_`s
:::

## "All-in-one" functions

```{r}
#| code-line-numbers: "|1,2|3"
#| fig-align: center
library(ggstatsplot)
ggbetweenstats(penguins, species, body_mass_g) +
  scale_y_continuous("Body Mass (g)", n.breaks = 10)
```

::: notes
With great power comes great responsibilityâ€”make sure you trust these stats!\
Notice that the output is a ggplot object, so you can continue to add layers to it.
:::

## Transformative & field-specific

::: {layout-ncol="2"}
[![ggspectra](https://exts.ggplot2.tidyverse.org/gallery/images/ggspectra.png){width="100%"}](https://docs.r4photobiology.info/ggspectra)

[![gggenes](https://exts.ggplot2.tidyverse.org/gallery/images/gggenes.png){width="100%"}](https://wilkox.org/gggenes)
:::

## Finding Extensions

-   Browse the `ggplot2` [extensions gallery](https://exts.ggplot2.tidyverse.org/gallery/)

-   Check out the [Awesome `ggplot2`](https://github.com/erikgahner/awesome-ggplot2#readme) list

-   [The R Graph Gallery](https://r-graph-gallery.com/)

-   Google search with "ggplot2" keyword

# Package Demos

## `patchwork`

`patchwork` allows you to compose multi-panel figures with ease

```{r}
#| echo: false
#| fig-align: center
library(patchwork)
p1 <- ggplot(penguins, aes(x = body_mass_g, y = bill_length_mm, color = species)) +
  geom_point()
p2 <- ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
  geom_point()
p3 <- ggplot(penguins, aes(x = body_mass_g)) + 
  facet_wrap(vars(island)) +
  geom_histogram() +
  theme(axis.title.y = element_blank())

(p1 + p2 + plot_layout(guides = "collect")) / p3 +
  plot_annotation(tag_levels = "A", tag_suffix = ")")
```

::: notes
Things to notice:

-   Plots areas are aligned despite one not having a y-axis label
-   Only one legend
-   Labels for panels A, B, C
:::

## Example plots

```{r}
p1 <- 
  ggplot(penguins, aes(x = body_mass_g, y = bill_length_mm, color = species)) +
  geom_point()
p2 <-
  ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
  geom_point()
p3 <- 
  ggplot(penguins, aes(x = body_mass_g)) + 
  facet_wrap(vars(island)) +
  geom_histogram()
```

## Combine plots

::: columns
::: {.column width="50%"}
::: nonincremental
-   `+` wraps plots
-   `|` combines plots horizontally
-   `/` combines plots vertically
-   `()` can be used to nest operations
:::
:::

::: {.column width="50%"}
```{r}
#| fig-width: 5
#| fig-height: 5
(p1 | p2) / p3
```
:::
:::

## Combine guides

If plots have *identical* guides, you can combine them with `plot_layout(guides = "collect")`

```{r}
p1 + p2 + plot_layout(guides = "collect")
```

::: notes
identical means same scale, same title, same glyph
:::

## Combining axes

As of the most recent version of `patchwork` (v1.2.0) you can also combine identical axes.

```{r}
p1 + p2 + plot_layout(guides = "collect", axes = "collect")
```

## Controlling layout

For more options for controlling layout, see the related vignette on the package website.

-   Adding empty areas
-   Inset plots
-   Adjusting widths and heights

## Tags

You can add "tags" to each panel with `plot_annotation()`

```{r}
p1 + p2 + plot_annotation(tag_levels = "A", tag_suffix = ")")
```

## Modifying all panels

You can use the `&` operator instead of `+` to modify **all** elements of a multi-panel figure.

```{r}
p1 + p2 & theme_bw() & scale_color_viridis_d()
```

## Using with base R plots

You can even combine `ggplot2` plots with base R plots with a special syntax

```{r}
p1 + ~hist(penguins$bill_depth_mm, main = "")
```

## Getting Help

-   `patchwork`: [Package website](https://patchwork.data-imaginist.com/index.html)

-   `gganimate`: [Getting started guide](https://gganimate.com/articles/gganimate.html), [reference](https://gganimate.com/reference/index.html)

-   Our [drop-in hours](https://datascience.cct.arizona.edu/drop-in-hours)

-   [UA Data Science Slack](https://join.slack.com/t/uadatascience/shared_invite/zt-1xjxht9k0-E489WA6axO_SRVeKQh3cXg)

# Anything we missed?

Got a `ggplot2` question we didn't cover in this workshop series?
Let's figure it out together!
