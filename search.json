[
  {
    "objectID": "2024/index.html",
    "href": "2024/index.html",
    "title": "Leveling up your data visualization skills with ggplot2",
    "section": "",
    "text": "Have you created some basic plots using the R package ggplot2? Do you want to advance your understanding of how ggplot2 works, or improve your skills with visualization details? Then this workshop series may be for you!\n\nWho: Anyone who has used ggplot2 and would like to learn more!\nWhat: 3 stand-alone workshops on next-level ggplot2 topics\nWhere: Zoom\nWhen: 11am - 1pm AZ on June 6, 13, and 20\nWhy: To improve and understand use of ggplot2 R package\n\nThis three-part series will teach you the skills to refine & expand your current ggplot2 skills so you can generate complex, publication-quality plots efficiently and reproducibly. We will cover: 1) the latest developments in and underpinnings of ggplot2, 2) principles of effective visual design and how to implement these in ggplot2, 3) and the ever-expanding landscape of extensions to create animated, geospatial, interactive, and other varieties of plots. These sessions are stand-alone, so feel free to attend any or all of them!\nSee more details and register for each session on their page:\n\nFoundations of ggplot2\nCrafting Professional Quality Data Visualizations With ggplot2\nExploring The Wide World of ggplot2 Extensions",
    "crumbs": [
      "Upcoming series"
    ]
  },
  {
    "objectID": "2024/02-design/index.html",
    "href": "2024/02-design/index.html",
    "title": "Crafting Professional Quality Data Visualizations With ggplot2",
    "section": "",
    "text": "Date & time: Thursday June 13, 2024, 11am - 1pm AZ\nInstructor: Renata Diaz\nIn this session, we will introduce principles of effective data communication and learn how to use ggplot2 customizations to create professional-quality visualizations. We will include customized color schemes, annotations and legends, and exporting figures to publication-quality formats.\nRegistration\nPrerequisites:\n\nInstall R, RStudio, and ggplot2\nSome previous usage of ggplot2",
    "crumbs": [
      "Upcoming series",
      "Session 2 - Design"
    ]
  },
  {
    "objectID": "2024/01-foundations/notes.html",
    "href": "2024/01-foundations/notes.html",
    "title": "Notes for foundations of ggplot2",
    "section": "",
    "text": "Hey these are some notes"
  },
  {
    "objectID": "2023/03-extensions/slides.html#learning-objectives",
    "href": "2023/03-extensions/slides.html#learning-objectives",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nUnderstand where to find packages that extend ggplot2\nMake animated plots with gganimate\nInteractively create plots with esquisse\nConvert ggplot2 plots to interactive plotly plots\nLabel data with ggrepel"
  },
  {
    "objectID": "2023/03-extensions/slides.html#packages",
    "href": "2023/03-extensions/slides.html#packages",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Packages",
    "text": "Packages\n\nlibrary(ggplot2)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "2023/03-extensions/slides.html#extensions-to-ggplot2",
    "href": "2023/03-extensions/slides.html#extensions-to-ggplot2",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Extensions to ggplot2",
    "text": "Extensions to ggplot2\nThere are many kinds of extensions to ggplot2, but many of them can be put into one of two “bins”\n\nPackages that add new layers\nPackages that wrap multiple layers for convenience"
  },
  {
    "objectID": "2023/03-extensions/slides.html#packages-that-extend-ggplot2",
    "href": "2023/03-extensions/slides.html#packages-that-extend-ggplot2",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Packages that extend ggplot2",
    "text": "Packages that extend ggplot2\nSome packages add new layers or themes that can be combined with standard ggplot2 functions.\n\nlibrary(ggbeeswarm)\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_boxplot() +\n  geom_beeswarm()\n\n\n\ngeom_beeswarm() can easily be added to other geom_s"
  },
  {
    "objectID": "2023/03-extensions/slides.html#packages-that-wrap-ggplot2",
    "href": "2023/03-extensions/slides.html#packages-that-wrap-ggplot2",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Packages that wrap ggplot2",
    "text": "Packages that wrap ggplot2\nOther packages provide convenience “all-in-one” functions that combine multiple layers for you.\n\nlibrary(ggpubr)\nggstripchart(penguins, x = \"species\", y = \"body_mass_g\",\n             add = \"boxplot\") +\n  scale_y_continuous(\"Body Mass (g)\", n.breaks = 10)\n\n\n\nNotice that ggstripchart() totally replaces ggplot(aes(…)) . However, it still makes a ggplot object that you can add layers to."
  },
  {
    "objectID": "2023/03-extensions/slides.html#finding-extensions",
    "href": "2023/03-extensions/slides.html#finding-extensions",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Finding Extensions",
    "text": "Finding Extensions\n\nBrowse the ggplot2 extensions gallery\nCheck out the Awesome ggplot2 list\nThe R Graph Gallery\nGoogle search with “ggplot2” keyword"
  },
  {
    "objectID": "2023/03-extensions/slides.html#gganimate",
    "href": "2023/03-extensions/slides.html#gganimate",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "gganimate",
    "text": "gganimate\n\nlibrary(gganimate)\n\nggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point() +\n  transition_time(year) + \n  labs(title = \"Year: {frame_time}\")"
  },
  {
    "objectID": "2023/03-extensions/slides.html#gganimate-1",
    "href": "2023/03-extensions/slides.html#gganimate-1",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "gganimate",
    "text": "gganimate\n\nggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point() +\n  transition_states(year, transition_length = 0.5) +\n  labs(title = \"Year: {closest_state}\") +\n  shadow_wake(wake_length = 0.1)\n\n\n\nanim_save(\"~/Desktop/test_anim.gif\")"
  },
  {
    "objectID": "2023/03-extensions/slides.html#plotly",
    "href": "2023/03-extensions/slides.html#plotly",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "plotly",
    "text": "plotly\n\nlibrary(plotly)\n\n\n\nplotly R package is interface to a JavaScript library for making interactive data visualizations\nOnly important to know that because if you search for plotly help, sometimes you’ll get JavaScript code examples.\nplotly kind of uses the grammar of graphics, but building a plot from scratch is tricky\nggplotly() transforms ggplot objects into interactive plotly plots. 90% of the time it gets you 90% of the way there"
  },
  {
    "objectID": "2023/03-extensions/slides.html#basic-interactive-plot-with-plotly",
    "href": "2023/03-extensions/slides.html#basic-interactive-plot-with-plotly",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Basic interactive plot with plotly",
    "text": "Basic interactive plot with plotly\n\np &lt;- \n  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point() +\n  labs(x = \"Bill length (mm)\", y = \"Bill depth (mm)\", color = \"Penguin Species\") +\n  theme_bw()\n\nggplotly(p)"
  },
  {
    "objectID": "2023/03-extensions/slides.html#customize-tooltip",
    "href": "2023/03-extensions/slides.html#customize-tooltip",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Customize tooltip",
    "text": "Customize tooltip\nYou can customize the info displayed in the tooltip with ggplotly(). Give it additional aesthetic text to include something only as a tooltip.\n\np2 &lt;- \n  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  #Ignore unknown aesthetics warning\n  geom_point(aes(text = sex)) +\n  labs(x = \"Bill length (mm)\", y = \"Bill depth (mm)\", color = \"Penguin Species\") +\n  theme_bw()\n\nggplotly(p2, tooltip = c(\"text\", \"bill_depth_mm\", \"bill_length_mm\"))\n\n\n\n\n\n\n\nWarning\n\n\nOutput not shown because currently plotly does not play nicely with Quarto revealjs slides (how this slide deck was made)"
  },
  {
    "objectID": "2023/03-extensions/slides.html#animate-plots-with-plotly",
    "href": "2023/03-extensions/slides.html#animate-plots-with-plotly",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Animate plots with plotly",
    "text": "Animate plots with plotly\nYou can use ggplotly() to make interactive animated plots by using the frame aesthetic\n\nlibrary(gapminder) #dataset\np3 &lt;- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +\n  geom_point(aes(size = pop, frame = year, ids = country)) +\n  scale_x_log10()\n\nggplotly(p3)\n\n\n\n\n\n\n\nWarning\n\n\nOutput not shown because currently plotly does not play nicely with Quarto revealjs slides (how this slide deck was made)"
  },
  {
    "objectID": "2023/03-extensions/slides.html#esquisse",
    "href": "2023/03-extensions/slides.html#esquisse",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "esquisse",
    "text": "esquisse\n\n\n\nlibrary(dplyr)\nlibrary(esquisse)\n\npenguins &lt;- \n  penguins %&gt;%\n  na.omit()\nesquisser(penguins)"
  },
  {
    "objectID": "2023/03-extensions/slides.html#ggrepel",
    "href": "2023/03-extensions/slides.html#ggrepel",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "ggrepel",
    "text": "ggrepel\nThe ggrepel package is helpful for directly labeling plots, especially when labels would otherwise overlap.\n\n\n\n\n\n\ngeom_text()\n\n\n\n\n\n\n\ngeom_text_repel()"
  },
  {
    "objectID": "2023/03-extensions/slides.html#getting-help",
    "href": "2023/03-extensions/slides.html#getting-help",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "Getting Help",
    "text": "Getting Help\n\ngganimate: Getting started guide, reference\ngplotly(): https://plotly.com/ggplot2/\nesquisse: Getting started guide, reference\nggrepel: Gallery of examples, list of available aesthetics you can map data to.\nOur drop-in hours\nUA Data Science Slack"
  },
  {
    "objectID": "2023/03-extensions/index.html",
    "href": "2023/03-extensions/index.html",
    "title": "Exploring the wide world of ggplot2 extensions",
    "section": "",
    "text": "Date & time: 11 a.m. to 1 p.m., June 26, 2023\nInstructors: Kristina Riemer & Eric Scott\nThere are over 100 packages that extend the functionality of ggplot2 to allow you to make just about any data visualization you can think of! In this workshop we’ll cover a few of our favorite extensions and show you how to find the ggplot2 extension that meets your data visualization needs.\n\nRecording\nNotes\n    View slides in full screen",
    "crumbs": [
      "2023",
      "Session 3 - Extensions"
    ]
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html",
    "href": "2023/02-publication-quality-figs/notes.html",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "",
    "text": "Learning Objectives\n\n\n\n\nCustomize color palettes with accessibility in mind\nCustomize appearance of plots with themes\nCustomizing axes (ticks, grid-lines, labels, date axes, transformations)\nCreate custom legends\nSave high resolution or vector formats\nArrange multi-panel figures"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#required-by-journals",
    "href": "2023/02-publication-quality-figs/notes.html#required-by-journals",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Required by journals",
    "text": "Required by journals\nJournals often require certain modifications to your plots to make them publication-ready\n\nHigh resolution\nSpecific file types (TIFF, EPS, PDF are common)\nFigure size limits\nFont size suggestions"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#not-required-but-good-practice",
    "href": "2023/02-publication-quality-figs/notes.html#not-required-but-good-practice",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Not required, but good practice",
    "text": "Not required, but good practice\nOther modifications to the appearance of your plot are a good idea, but less often required by journals or reviewers\n\nColorblind accessible colors\nGrey scale friendly colors\nPerceptually-even colors\nScreen-reader compatible\nHigh data-ink ratio (simplify plot, within reason)\nArrangement of related plots into multi-panel figures"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#example-plots",
    "href": "2023/02-publication-quality-figs/notes.html#example-plots",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Example plots",
    "text": "Example plots\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nA version of the plot from part 1 of this workshop series is re-created here.\n\nCodep1 &lt;-\n  ggplot(data = penguins |&gt; \n           filter(!is.na(sex)),\n         mapping = aes(x = species, \n                       y = body_mass_g,\n                       shape = sex)) +\n  geom_point(\n    alpha = 0.15,\n    position = position_jitterdodge(dodge.width = 0.75)\n  ) +\n  stat_summary(\n    fun.data = mean_sdl,\n    position = position_dodge(width = 0.75)\n  )\n\n\n\np1\n\n\n\n\n\n\n\nIn addition, I’ll create two more basic plots for practice combining plots into multi-panel figures.\n\nCode#bill length vs. flipper length\np2 &lt;-\n  ggplot(penguins,\n         aes(\n           x = flipper_length_mm,\n           y = bill_length_mm,\n           color = species,\n           fill = species,\n           shape = species\n         )) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\np2\n\n\n\n\n\n\n\n\nCode# flipper length to mass ratio vs. bill_length\np3 &lt;-\n  ggplot(penguins,\n         aes(\n           x = flipper_length_mm,\n           y = bill_depth_mm,\n           color = species,\n           fill = species,\n           shape = species\n         )) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\np3"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#color",
    "href": "2023/02-publication-quality-figs/notes.html#color",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Color",
    "text": "Color\nThere are many ways to change plot colors, including using built-in palettes, packages that add color palettes, and manually. It’s usually best to choose a color palette that meets these criteria:\n\nColorblind friendly\nGreyscale friendly\nPerceptually even\nHigh contrast (with background & eachother)\n\nThe viridis color palettes built in to ggplot2 generally meet these criteria and are a good choice for many visualizations.\nHere’s an example plot with a color bar:\n\nv &lt;- \n  ggplot(\n    penguins,\n    aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)\n  ) +\n  geom_point()\nv\n\n\n\n\n\n\n\nFor a continuous color scale use scale_color_viridis_c()\n\nv + scale_color_viridis_c()\n\n\n\n\n\n\n\nOther palettes are available by changing option\n\n# Variations with option = \"A\" through \"H\"\nv + scale_color_viridis_c(option = \"B\")\n\n\n\n\n\n\n\nA binned version is available with scale_color_viridis_b()\n\nv + scale_color_viridis_b(option = \"B\", n.breaks = 5)\n\n\n\n\n\n\n\nThe viridis palettes tend to end on a very bright yellow, which doesn’t look great on light backgrounds, especially on a projector. You can “cap” the scale using begin and end.\nE.g. Begin at 10% in to skip the darkest purples and end at 90% to skip the brightest yellows\nv + scale_color_viridis_c()\nv + scale_color_viridis_c(begin = 0.1, end = 0.9)\n\n\n\n\n\n\n\n\n\n\nDiscrete colors\nOur initial example plot uses just 3 colors, but we can still use viridis to ensure they are colorblind friendly and perceptually even using scale_color_viridis_d() for “discrete”. The colors still follow a gradient from cool to warm.\n\np2 + scale_color_viridis_d(end = 0.9, option = \"C\")\n\n\n\n\n\n\n\nTo apply the same color scale to both “fill” and “color”, you can use the aesthetics argument to scale_color_* or scale_fill_* functions.\n\np2 + \n  scale_color_viridis_d(end = 0.9, option = \"C\", aesthetics = c(\"fill\", \"color\"))\n\n\n\n\n\n\n\nManual color palette\nMaybe you don’t like the viridis palettes or maybe you want a palette more appropriate for diverging or discrete data. There are a ton of tools for generating color palettes—both R packages that extend ggplot2 and external tools.\nPackages and resources to check out:\n\n\ncolorspace (Zeileis et al. 2019)\n\ncols4all\npaletteer\nComprehensive list of color palettes in r\n\nYou can use any set of colors as a custom palette with scale_color_manual().\n\nmy_cols &lt;- c(\"#B60A1C\",\"#E39802\",\"#309143\")\n\np2 + scale_color_manual(values = my_cols, aesthetics = c(\"color\", \"fill\"))\n\n\n\n\n\n\n\nSpecify which color goes with which factor level by using a named vector.\nmy_cols &lt;- \n  c(\"Chinstrap\" = \"#B60A1C\", \"Gentoo\" = \"#E39802\", \"Adelie\" = \"#309143\")\np2 &lt;- p2 + \n  scale_color_manual(values = my_cols, aesthetics = c(\"color\", \"fill\"))\np2\np3 &lt;- p3 +\n  scale_color_manual(values = my_cols, aesthetics = c(\"color\", \"fill\"))\np3"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#labeling-scales",
    "href": "2023/02-publication-quality-figs/notes.html#labeling-scales",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Labeling scales",
    "text": "Labeling scales\nEach scale (color, fill, shape), including x and y axes, can have a label. There are multiple ways to set this, but I’ll demonstrate setting it with labs()\n\np2 + labs(color = \"Penguin Species\")\n\n\n\n\n\n\n\nThis creates a separate legend for color. Guides with the same name will get combined when possible.\n\np2 + \n  labs(\n    color = \"Penguin Species\",\n    shape = \"Penguin Species\",\n    fill = \"Penguin Species\"\n  )\n\n\n\n\n\n\n\nWe can also use labs() to re-name the axes\n\np2 &lt;- p2 + \n  labs(\n    color = \"Penguin Species\",\n    shape = \"Penguin Species\",\n    fill = \"Penguin Species\",\n    x = \"Flipper Length (mm)\",\n    y = \"Bill Length (mm)\"\n  )\np2\n\n\n\n\n\n\n\n\np3 &lt;- p3 + \n  labs(\n    color = \"Penguin Species\",\n    shape = \"Penguin Species\",\n    fill = \"Penguin Species\",\n    x = \"Flipper Length (mm)\",\n    y = \"Bill Depth (mm)\"\n  )\np3\n\n\n\n\n\n\n\n\np1 &lt;- p1 +\n  labs(x = \"Species\", y = \"Body Mass (g)\", shape = \"Sex\")\np1"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#custom-axes",
    "href": "2023/02-publication-quality-figs/notes.html#custom-axes",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Custom Axes",
    "text": "Custom Axes\nAxes are a type of scale and can be modified with ggplot2 functions like scale_x_continuous() for continuous data, scale_x_discrete() for discrete data, etc.\nOur first plot has a discrete x axis and a continuous y axis. We can use a scale_*() to change the x-axis labels (there are other ways to do this of course) and adjust the number of breaks on the y-axis\n\nscinames &lt;-\n  c(\"Adelie\" = \"P. adeliae\", \"Chinstrap\" = \"P. antarticus\", \"Gentoo\" = \"P. papua\")\np1 &lt;- \n  p1 + scale_x_discrete(labels = scinames) + scale_y_continuous(n.breaks = 12)\np1 \n\n\n\n\n\n\n\nYou’ll notice that n.breaks=12 doesn’t produce exactly 12 breaks—it preferences “pretty” breaks at whole numbers and tries to get about as many breaks as you asked for. Supply a numeric vector to breaks if you want to specify the breaks exactly.\nAxis limits\nYou can set the range of an axis two ways, and the choice of which way is consequential. Setting limits inside of scale_() crops the data while coord_cartesian() only crops the plotting area. With ylim(2000, 5500) the mean and standard error for our largest penguins are re-drawn using the cropped data while they are unaffected by coord_cartesian() (except that they go off the edge of the plotting area now)\np1 + scale_y_continuous(limits = c(2000, 5500), n.breaks = 12)\n# p1 + ylim(2000, 5500) #shortcut if you only want to change limits\np1 + coord_cartesian(ylim = c(2000, 5500))\n\n\n\n\n\nLimits set in scale_y_*() or with ylim()\n\n\n\n\n\nLimits set in coord_cartesian()\n\n\n\n\n\nWe can use coord_flip() to make a horizontal graph.\n\np1 + coord_flip()\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\ncoord_flip() only changes where the x and y axes are drawn. In the plot above, the axis labeled “species” is still the x-axis, as far as ggplot2 code is concerned."
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#customizing-appearance-with-theme",
    "href": "2023/02-publication-quality-figs/notes.html#customizing-appearance-with-theme",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Customizing appearance with theme()\n",
    "text": "Customizing appearance with theme()\n\n\nThere are several complete themes built-in to ggplot2, and many more available from other packages.\np2 + theme_bw()\np2 + theme_minimal()\n\n\n\n\n\ntheme_bw()\n\n\n\n\n\ntheme_minimal()\n\n\n\n\n\nlibrary(ggthemes)\np1 + theme_solarized()\n\n\n\ntheme_solarized() from ggthemes package\n\n\n\nCustomizing themes “manually” involves knowing the name of the theme element and it’s corresponding element_*() function. A good place to start is the help page for theme() https://ggplot2.tidyverse.org/reference/theme.html\n\n\n\n\n\n\nTip\n\n\n\nIt’s best to find a built-in theme_*() function that gets you most of the way there and then customize with theme()\n\n\n\np1 + \n  theme_minimal() + \n  theme(axis.line = element_line(linewidth = 0.5, lineend = \"round\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivity\n\n\n\nName some things about the appearance of p1 that you want to change and we’ll figure it out together!\n\n\nYou can save your theme as an R object to re-use, or use theme_set() at the top of a script to make it the default.\n\n#create a custom theme\nmy_theme &lt;- \n  theme_minimal() + \n  theme(\n    axis.line = element_line(linewidth = 0.5, lineend = \"round\"),\n    axis.ticks = element_line(linewidth = 0.2),\n    legend.background = element_rect(linewidth = 0.2)\n  )\n\n#add to a plot\np2 + my_theme\n\n\n\n\n\n\n#or set as default\ntheme_set(my_theme)\n\np3"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#multi-panel-figures",
    "href": "2023/02-publication-quality-figs/notes.html#multi-panel-figures",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Multi-panel figures",
    "text": "Multi-panel figures\npatchwork allows simple composistion of multi-panel figures with ggplot2 plots\n\nlibrary(patchwork)\np1 + p2\n\n\n\n\n\n\n\n\n+ combines plots\n| combines plots side-by-side\n/ combines plots vertically\n() can be used to nest operations\n\n\np1 / (p2 | p3)\n\n\n\n\n\n\n\n\nplot_layout() controls layout. The coolest feature, IMO, is guides = \"collect\" which combines duplicate legends\nplot_annotation() is useful for adding labels to panels\n\n\np_combined &lt;-\n  p1 /\n  (p2 + p3 + plot_layout(guides = \"collect\")) + \n  plot_annotation(tag_levels = \"a\", tag_suffix = \")\")\np_combined\n\n\n\n\n\n\n\nYou can also apply layers or themes to all sub-plots by using & instead of +\n\np_combined & theme_dark()"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#saving-plots",
    "href": "2023/02-publication-quality-figs/notes.html#saving-plots",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Saving plots",
    "text": "Saving plots\nAlthough we often leave this step until the end, I think it’s good to save your plot to a file early on once the plot starts taking shape. If you have some plot dimensions in mind, this allows you to see how any further changes will look in the finished plot.\n\nggsave(\n  filename = \"penguins.png\", # filetype comes from filename extension\n  plot = p_combined, # default is prev. plot, but good to specify\n  width = 7, \n  height = 5, \n  units = \"in\", \n  dpi = \"print\" # resolution for raster images\n)\n\n\nFor example, with these dimensions (4x3 in.), the points and lines appear quite large and some of the text is probably larger than it needs to be. If we had saved the plot earlier, we wouldn’t necessarily have to go back and tweak things.\nRaster vs. Vector\nRaster images (e.g. .jpg, .png, .tiff) are made of pixels and the resolution can vary. Vector images (e.g. .svg, .eps) are not made of pixels and don’t have a resolution.\n\n\n\n\n\n\nTip\n\n\n\nTry zooming in on the images below in your browser to see the difference\n\n\n\n\n\n\n\n\n\n\nRaster (72 dpi .png file)\n\n\n\n\n\nVector (.svg file)\n\n\n\n\nVector images should be used whenever possible and accepted by the journal. Vector formats are more accessible for screen-readers as well (although you should always provide alt-text when possible)"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#getting-help",
    "href": "2023/02-publication-quality-figs/notes.html#getting-help",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Getting help",
    "text": "Getting help\nBesides adding ggplot2 to search terms, there a few good places to look for help or inspiration in improving or modifying the appearance of ggplot2 plots:\n\nThe ggplot2 documentation itself, in particular the examples on the theme() page and the FAQ on customization.\nThe R Graph Gallery has a wide variety of plots with R code walkthroughs.\nThe ggplot2 book: https://ggplot2-book.org/\n\nYou can always come by our drop-in hours to ask questions as well!"
  },
  {
    "objectID": "2023/02-publication-quality-figs/notes.html#part-3-next-week",
    "href": "2023/02-publication-quality-figs/notes.html#part-3-next-week",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2\n",
    "section": "Part 3 next week!",
    "text": "Part 3 next week!\n“Exploring the wide world of ggplot2 extensions”\n🗓️ June 26, 11:00am–1:00pm\n\nRegister"
  },
  {
    "objectID": "2023/01-foundations/slides.html#cct-data-science-ggplot2-series",
    "href": "2023/01-foundations/slides.html#cct-data-science-ggplot2-series",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "CCT Data Science ggplot2 series",
    "text": "CCT Data Science ggplot2 series\n\nIn Part 1 of this series, we will:\n\nExplore the grammar of graphics\nMap data to aesthetics\nUnderstand layer components\nInterpret ggplot2 documentation\nCreate a layered plot\nIntroduce function and syntax of visual elements"
  },
  {
    "objectID": "2023/01-foundations/slides.html#what-is-a-grammar",
    "href": "2023/01-foundations/slides.html#what-is-a-grammar",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "What is a grammar?",
    "text": "What is a grammar?\n“The fundamental principles or rules of an art or science” - Oxford English Dictionary\n\n\nreveal composition of complicated graphics\nstrong foundation for understanding a range of graphics\nguide for well-formed or correct graphics\n\n\n\n\n\n\n\n\nNote\n\n\nSee “The Grammar of Graphics” by Leland Wilkinson (2005) and “A Layered Grammar of Graphics” by Hadley Wickham (2010)"
  },
  {
    "objectID": "2023/01-foundations/slides.html#layered-grammar-of-graphics",
    "href": "2023/01-foundations/slides.html#layered-grammar-of-graphics",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Layered grammar of graphics",
    "text": "Layered grammar of graphics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2 builds complex plots iteratively, one layer at a time.\n\n\nWhat are the necessary components of a plot?\nWhat are necessary components of a layer?"
  },
  {
    "objectID": "2023/01-foundations/slides.html#components-of-a-plot",
    "href": "2023/01-foundations/slides.html#components-of-a-plot",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Components of a plot",
    "text": "Components of a plot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA plot contains:\n\n\nData and aesthetic mapping\nLayer(s) containing geometric object(s) and statistical transformation(s)\nScales\nCoordinate system\n(Optional) facets or themes"
  },
  {
    "objectID": "2023/01-foundations/slides.html#components-of-a-layer",
    "href": "2023/01-foundations/slides.html#components-of-a-layer",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Components of a layer",
    "text": "Components of a layer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA layer contains:\n\n\nData with aesthetic mapping\nA statistical transformation, or stat\nA geometric object, or geom\nA position adjustment"
  },
  {
    "objectID": "2023/01-foundations/slides.html#what-data-inputs-are-needed",
    "href": "2023/01-foundations/slides.html#what-data-inputs-are-needed",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "What data inputs are needed?",
    "text": "What data inputs are needed?\nData can be added to either the entire ggplot object or a particular layer.\nInput data must be a dataframe in ‘tidy’ format:\n\n\nevery column is a variable\nevery row is an observation\nevery cell is a single value\n\n\n\n\n\n\n\n\nNote\n\n\nSee “Tidy Data” by Wickham (2014) and the associated vignette"
  },
  {
    "objectID": "2023/01-foundations/slides.html#example-dataset---raw",
    "href": "2023/01-foundations/slides.html#example-dataset---raw",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Example dataset - raw",
    "text": "Example dataset - raw\n\n\n\n\n\n\nspecies\nbill_length_mm\nbill_depth_mm\nbody_mass_g\n\n\n\n\nAdelie\n39.1\n18.7\n3750\n\n\nAdelie\n39.5\n17.4\n3800\n\n\nGentoo\n46.7\n15.3\n5200\n\n\nGentoo\n43.3\n13.4\n4400\n\n\nChinstrap\n46.1\n18.2\n3250\n\n\nChinstrap\n51.3\n18.2\n3750"
  },
  {
    "objectID": "2023/01-foundations/slides.html#example-dataset---mapped",
    "href": "2023/01-foundations/slides.html#example-dataset---mapped",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Example dataset - mapped",
    "text": "Example dataset - mapped\n\n\n\n\n\n\n\n\n\n\n\n\naes(x = bill_length_mm,\n    y = bill_depth_mm,\n    size = body_mass_g,\n    color = species)\n\n\nVariables mapped to aesthetic:\n\n\n\n\n\n\nColor\nx\ny\nSize\n\n\n\n\nAdelie\n39.1\n18.7\n3750\n\n\nAdelie\n39.5\n17.4\n3800\n\n\nGentoo\n46.7\n15.3\n5200\n\n\nGentoo\n43.3\n13.4\n4400\n\n\nChinstrap\n46.1\n18.2\n3250\n\n\nChinstrap\n51.3\n18.2\n3750"
  },
  {
    "objectID": "2023/01-foundations/slides.html#where-to-specify-aesthetics",
    "href": "2023/01-foundations/slides.html#where-to-specify-aesthetics",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Where to specify aesthetics?",
    "text": "Where to specify aesthetics?\n\n\nCan be supplied to initial ggplot() call, in individual layers, or a combo\nggplot() data and aesthetics are inherited, but can be overridden"
  },
  {
    "objectID": "2023/01-foundations/slides.html#where-to-specify-aesthetics-1",
    "href": "2023/01-foundations/slides.html#where-to-specify-aesthetics-1",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Where to specify aesthetics?",
    "text": "Where to specify aesthetics?\n\nCan be supplied to initial ggplot() call, in individual layers, or a combo\nggplot() data and aesthetics are inherited, but can be overridden\n\n\nggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm, \n                     color = species)) +\n  geom_point()\n\n\nggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point(aes(color = species))\n\n\nggplot() +\n  geom_point(data = penguins,\n             aes(x = body_mass_g, y = flipper_length_mm, color = species))"
  },
  {
    "objectID": "2023/01-foundations/slides.html#inheritance-of-aesthetics-by-layers",
    "href": "2023/01-foundations/slides.html#inheritance-of-aesthetics-by-layers",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Inheritance of aesthetics by layers",
    "text": "Inheritance of aesthetics by layers\n\n\n\nggplot(penguins, aes(x = body_mass_g, \n                     y = flipper_length_mm, \n                     color = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)"
  },
  {
    "objectID": "2023/01-foundations/slides.html#inheritance-of-aesthetics-by-layers-1",
    "href": "2023/01-foundations/slides.html#inheritance-of-aesthetics-by-layers-1",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Inheritance of aesthetics by layers",
    "text": "Inheritance of aesthetics by layers\n\n\n\nggplot(penguins, aes(x = body_mass_g, \n                     y = flipper_length_mm, \n                     color = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) \n\n\n\n\n\n\n\n\n\n\nggplot(penguins, aes(x = body_mass_g, \n                     y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(method = \"lm\", \n              se = FALSE)"
  },
  {
    "objectID": "2023/01-foundations/slides.html#mapping-aesthetics-to-constants",
    "href": "2023/01-foundations/slides.html#mapping-aesthetics-to-constants",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Mapping aesthetics to constants",
    "text": "Mapping aesthetics to constants\nSpecifying a constant inside aes() with quotes creates a legend on the fly\n\n\n\nggplot(penguins, \n       aes(x = body_mass_g,\n           color = species)) +\n  geom_point(aes(y = bill_length_mm, \n                 shape = \"Length\")) +\n  geom_point(aes(y = bill_depth_mm, \n                 shape = \"Depth\")) +\n  ylab(\"Bill dimensions (mm)\") +\n  labs(shape = \"dimension\")"
  },
  {
    "objectID": "2023/01-foundations/slides.html#under-the-hood-with-layer",
    "href": "2023/01-foundations/slides.html#under-the-hood-with-layer",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Under the hood with layer()",
    "text": "Under the hood with layer()\n\n\nA layer contains:\n\nData with aesthetic mapping\nA statistical transformation, or stat\nA geometric object, or geom\nA position adjustment\n\n\n\nggplot() +\n  geom_point()\n\n\nggplot() +\n  layer(mapping = NULL,\n        data = NULL,\n        geom = \"point\",\n        stat = \"identity\",\n        position = \"identity\")\n\n\n\n\n\n\n\n\n\nNote\n\n\nAll geom_*() or stat_*() calls are customized shortcuts for the layer() function."
  },
  {
    "objectID": "2023/01-foundations/slides.html#the-expediency-of-defaults",
    "href": "2023/01-foundations/slides.html#the-expediency-of-defaults",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "The expediency of defaults",
    "text": "The expediency of defaults\n\n\n\n\nDefining each of the components of a layer or whole graphic can be tiresome\nggplot2 has a hierarchy of defaults\nSo you can make a graph in 2 lines of code!"
  },
  {
    "objectID": "2023/01-foundations/slides.html#the-short-way-and-the-long-way",
    "href": "2023/01-foundations/slides.html#the-short-way-and-the-long-way",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "The short way and the long way",
    "text": "The short way and the long way\n\n\n\nggplot() +\n  geom_point(data = penguins,\n             mapping = aes(x = body_mass_g,\n                           y = flipper_length_mm))"
  },
  {
    "objectID": "2023/01-foundations/slides.html#the-short-way-and-the-long-way-1",
    "href": "2023/01-foundations/slides.html#the-short-way-and-the-long-way-1",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "The short way and the long way",
    "text": "The short way and the long way\n\n\n\nggplot() +\n  geom_point(data = penguins,\n             mapping = aes(x = body_mass_g,\n                           y = flipper_length_mm))\n\n\nggplot() +\n  layer(data = penguins,\n        mapping = aes(\n          x = body_mass_g,\n          y = flipper_length_mm),\n        geom = \"point\", \n        stat = \"identity\",\n        position = \"identity\") +\n  scale_x_continuous() +\n  scale_y_continuous() +\n  coord_cartesian()"
  },
  {
    "objectID": "2023/01-foundations/slides.html#stat_-vs.-geom_",
    "href": "2023/01-foundations/slides.html#stat_-vs.-geom_",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "stat_* vs. geom_*",
    "text": "stat_* vs. geom_*\n“Every geom has a default statistic, and every statistic has a default geom.” - Wickham (2010)\n\n\nstat_* transforms the data\n\nBy computing or summarizing from original input dataset\nReturns a new dataset that can be mapped to aesthetics\n\ngeom_* control the type of plot rendered\n\n\n\n\n\n\n\n\nTip\n\n\nWhen in doubt, check the documentation"
  },
  {
    "objectID": "2023/01-foundations/slides.html#two-ways-to-plot-counts-categorical",
    "href": "2023/01-foundations/slides.html#two-ways-to-plot-counts-categorical",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Two ways to plot counts (categorical)",
    "text": "Two ways to plot counts (categorical)\nstat_count() and geom_bar() are equivalent\n\n\n\nggplot(data = penguins, \n       mapping = aes(x = species, \n                     fill = sex)) +\n  stat_count()\n\n\n\n\n\n\n\n\n\n\nggplot(data = penguins, \n       mapping = aes(x = species, \n                     fill = sex)) +\n  geom_bar()"
  },
  {
    "objectID": "2023/01-foundations/slides.html#two-ways-to-plot-density-continuous",
    "href": "2023/01-foundations/slides.html#two-ways-to-plot-density-continuous",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Two ways to plot density (continuous)",
    "text": "Two ways to plot density (continuous)\nstat_density() and geom_density() are not equivalent\n\n\n\nggplot(data = penguins, \n       mapping = aes(x = body_mass_g, \n                     fill = species)) +\n  stat_density(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nggplot(data = penguins, \n       mapping = aes(x = body_mass_g, \n                     fill = species)) +\n  geom_density(alpha = 0.5)"
  },
  {
    "objectID": "2023/01-foundations/slides.html#when-to-use-which",
    "href": "2023/01-foundations/slides.html#when-to-use-which",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "When to use which?",
    "text": "When to use which?\nIn general, use geom_*() unless you are trying to:\n\nOverrideCustomizeSummarize\n\n\n\n\n\npenguins %&gt;%\n  count(species) %&gt;%\n  ggplot(aes(x = species, y = n)) +\n  geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, aes(x = species, \n                     y = after_stat(prop),\n                     group = 1)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(penguins) +\n  stat_summary(aes(x = species,\n                   y = body_mass_g),\n               fun.min = min,\n               fun.max = max,\n               fun = mean)"
  },
  {
    "objectID": "2023/01-foundations/slides.html#a-panopoly-of-layer-options",
    "href": "2023/01-foundations/slides.html#a-panopoly-of-layer-options",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "A panopoly of layer options!",
    "text": "A panopoly of layer options!\nTrack all geom and stat options\n\n\n\n\n\n\nExercise\n\n\nFor each of the following problems, suggest a useful geom:\n\nDisplay how a variable has changed over time\nShow the detailed distribution of a single variable\nFocus attention on one portion of a large dataset\nDraw a map\nLabel outlying points"
  },
  {
    "objectID": "2023/01-foundations/slides.html#position-adjustment-options",
    "href": "2023/01-foundations/slides.html#position-adjustment-options",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Position adjustment options",
    "text": "Position adjustment options\n\nstackfilldodge\n\n\n\nggplot(data = penguins, mapping = aes(x = species, fill = sex)) +\n  geom_bar(position = \"stack\")\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = penguins, mapping = aes(x = species, fill = sex)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = penguins, mapping = aes(x = species, \n                     fill = sex)) +\n  geom_bar(position = \"dodge\")"
  },
  {
    "objectID": "2023/01-foundations/slides.html#position-adjustment-options-1",
    "href": "2023/01-foundations/slides.html#position-adjustment-options-1",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Position adjustment options",
    "text": "Position adjustment options\n\nidentityjitterjitterdodge\n\n\n\nggplot(data = penguins, mapping = aes(x = species, y = body_mass_g, color = sex)) +\n  geom_point(position = \"identity\")\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = penguins, mapping = aes(x = species, y = body_mass_g, color = sex)) +\n  geom_point(position = \"jitter\")\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = penguins, mapping = aes(x = species, y = body_mass_g, color = sex)) +\n  geom_point(position = position_jitterdodge())"
  },
  {
    "objectID": "2023/01-foundations/slides.html#position-adjustments-limitations",
    "href": "2023/01-foundations/slides.html#position-adjustments-limitations",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Position adjustments limitations",
    "text": "Position adjustments limitations\nFor example, boxplots and errorbars can’t be stacked.\n\n\n\n\n\n\nExercise\n\n\n\nWhat properties must a geom possess to be stackable?\nWhat properties must a geom possess to be dodgeable?"
  },
  {
    "objectID": "2023/01-foundations/slides.html#recreating-a-layered-plot",
    "href": "2023/01-foundations/slides.html#recreating-a-layered-plot",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Recreating a layered plot",
    "text": "Recreating a layered plot\n\n\n\n\n\n\n\nExercise\n\n\nWhat are the two layers in this plot? What data when into each?"
  },
  {
    "objectID": "2023/01-foundations/slides.html#scales-and-guides",
    "href": "2023/01-foundations/slides.html#scales-and-guides",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Scales and guides",
    "text": "Scales and guides\n\n\nEach scale is a function that translate data space (in data units) into aesthetic space (e.g., pixels)\nA guide (axis or legend) is the inverse function, that converts visual properties back to data"
  },
  {
    "objectID": "2023/01-foundations/slides.html#scales-and-guides-1",
    "href": "2023/01-foundations/slides.html#scales-and-guides-1",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Scales and guides",
    "text": "Scales and guides\n\nEach scale is a function that translate data space (in data units) into aesthetic space (e.g., pixels)\nA guide (axis or legend) is the inverse function, that converts visual properties back to data\n\n\nAre axes and legends equivalent?"
  },
  {
    "objectID": "2023/01-foundations/slides.html#scale-specification",
    "href": "2023/01-foundations/slides.html#scale-specification",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Scale specification",
    "text": "Scale specification\nEvery aesthetic in a plot is associated with exactly one scale.\n\n\n\nggplot(penguins, \n       aes(x = body_mass_g,\n           y = flipper_length_mm)) +\n  geom_point(aes(color = species))\n\n\n\nggplot(penguins, \n       aes(x = body_mass_g,\n           y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  scale_x_continuous() + \n  scale_y_continuous() + \n  scale_colour_discrete()\n\n\n\nScale functions names are made of 3 pieces separated by “_”:\n\n\nscale\nthe name of the primary aesthetic (color, shape, x)\nthe name of the scale (discrete, continuous, brewer)"
  },
  {
    "objectID": "2023/01-foundations/slides.html#what-does-a-coordinate-system-do",
    "href": "2023/01-foundations/slides.html#what-does-a-coordinate-system-do",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "What does a coordinate system do?",
    "text": "What does a coordinate system do?\nCoordinate systems have 2 primary roles:\n\n\nCombine the x and y position aesthetics to produce a 2-dimensional position on the plot\nIn coordination with faceting (optional), draw axes and panel backgrounds"
  },
  {
    "objectID": "2023/01-foundations/slides.html#types-of-coordinate-systems",
    "href": "2023/01-foundations/slides.html#types-of-coordinate-systems",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Types of coordinate systems",
    "text": "Types of coordinate systems\n\n\nLinear:\n\ncoord_cartesian(): common default\ncoord_flip(): x and y axes flipped\ncoord_fixed(): fixed aspect ratio\n\n\n\n\nNon-linear:\n\n\ncoord_map()/coord_quickmap()/coord_sf(): map projections, x and y become longitude and latitude\ncoord_polar(): polar coordinates, x and y become angle and radius\ncoord_trans(): apply transformations"
  },
  {
    "objectID": "2023/01-foundations/slides.html#faceting",
    "href": "2023/01-foundations/slides.html#faceting",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Faceting",
    "text": "Faceting\nCreates small multiples to show different subsets:\n\nfacet_null(): default\nfacet_wrap(): “wraps” a 1d ribbon of panels into 2d\nfacet_grid(): 2d grid of panels defined by row and column"
  },
  {
    "objectID": "2023/01-foundations/slides.html#keeping-points-of-reference",
    "href": "2023/01-foundations/slides.html#keeping-points-of-reference",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Keeping points of reference",
    "text": "Keeping points of reference\n\n\n\n\n\n\nExercise\n\n\nRecreate the figure below. How would you get the gray points to show up on all facets?"
  },
  {
    "objectID": "2023/01-foundations/slides.html#theming",
    "href": "2023/01-foundations/slides.html#theming",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Theming",
    "text": "Theming\nControls non-data elements of plots (e.g., to match a style guide).\n\n\nTheme elements specify the non-data elements you can control: plot.title, legend.position\nEach element has an element function to describe its visual properties: element_text(), element_blank()\nThe theme() function allows overriding of the default theme: theme(legend.title = element_blank())"
  },
  {
    "objectID": "2023/01-foundations/slides.html#complete-themes",
    "href": "2023/01-foundations/slides.html#complete-themes",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Complete themes",
    "text": "Complete themes\n\ntheme_bw()theme_minimal()theme_classic()\n\n\n\n\n\nggplot(penguins, \n       aes(x = body_mass_g,\n           y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, \n       aes(x = body_mass_g,\n           y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, \n       aes(x = body_mass_g,\n           y = flipper_length_mm)) +\n  geom_point(aes(color = species)) +\n  theme_classic()"
  },
  {
    "objectID": "2023/01-foundations/slides.html#further-resources",
    "href": "2023/01-foundations/slides.html#further-resources",
    "title": "Understanding the foundations of ‘ggplot2’",
    "section": "Further resources",
    "text": "Further resources\n\n\nPenguin artwork by @allison_horst\nHadley Wickham’s “A layered grammar of graphics” (2010)\nHadley Wickham’s “ggplot2: Elegant Graphics for Data Analysis, 3rd edition”, now available online\n“R for Data Science”, by Hadley Wickham, Mine Cetinkaya-Rundel, & Garret Grolemund, especially chapters 2, 10, and 12\nSee us at drop-in hours\n\n\n\n\n\n\nIntermediate ggplot2 workshop series"
  },
  {
    "objectID": "2023/01-foundations/index.html",
    "href": "2023/01-foundations/index.html",
    "title": "Understanding the foundations of ggplot2",
    "section": "",
    "text": "Date & time: Monday, June 5, 2023\nInstructor: Jessica Guo\nIn this workshop you’ll gain a better understanding of the “grammar of graphics”—the theory underlying the ggplot2 package. Using practical examples, you’ll learn how understanding the grammar of graphics can help you build more creative, complex, information-rich visualizations.\n\nRecording\nplot_layers.R\nplot_facets.R\n    View slides in full screen",
    "crumbs": [
      "2023",
      "Session 1 - Foundations"
    ]
  },
  {
    "objectID": "2023/02-publication-quality-figs/index.html",
    "href": "2023/02-publication-quality-figs/index.html",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "",
    "text": "Date & time: 11 a.m. to 1 p.m., June 12, 2023\nInstructor: Eric Scott\nIf you know how to make basic plots with ggplot2, but struggle to add on finishing touches like specifying colors, customizing axes, adding text to plots, and creating multi-panel figures, then this workshop is for you!\n\nRecording\nNotes\n    View slides in full screen",
    "crumbs": [
      "2023",
      "Session 2 - Design"
    ]
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#learning-objectives",
    "href": "2023/02-publication-quality-figs/slides.html#learning-objectives",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nCustomize color palettes with accessibility in mind\nCustomize legends\nCustomizing axes (titles, labels, breaks)\nCustomize appearance of plots with themes\nArrange multi-panel figures\nSave high resolution or vector formats"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#required-packages",
    "href": "2023/02-publication-quality-figs/slides.html#required-packages",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Required Packages",
    "text": "Required Packages\n\nlibrary(tidyverse) #includes ggplot2\nlibrary(palmerpenguins) #for data\nlibrary(patchwork) #multi-panel figures\nlibrary(colorspace)\n\nTake a moment to check if these load and install them if you need to."
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#journal-requirements",
    "href": "2023/02-publication-quality-figs/slides.html#journal-requirements",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Journal Requirements",
    "text": "Journal Requirements\nJournals often require certain modifications to your plots to make them publication-ready\n\nHigh resolution\nSpecific file types (TIFF, EPS, PDF are common)\nFigure size limits\nFont size suggestions\n\n\nGet audience suggestions before advancing bullets"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#not-required-but-good-practice",
    "href": "2023/02-publication-quality-figs/slides.html#not-required-but-good-practice",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Not required, but good practice",
    "text": "Not required, but good practice\nOther modifications to the appearance of your plot are a good idea, but less often required by journals or reviewers\n\nColorblind accessible colors\nGrey scale friendly colors\nPerceptually-even colors\nScreen-reader compatible\nHigh data-ink ratio (simplify plot, within reason)\nArrangement of related plots into multi-panel figures\n\n\nGet audience suggestions before advancing bullets"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#example-plot-1",
    "href": "2023/02-publication-quality-figs/slides.html#example-plot-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Example plot 1",
    "text": "Example plot 1\n\np1 &lt;-\n  ggplot(penguins |&gt; filter(!is.na(sex)),\n         aes(x = species, y = body_mass_g, shape = sex)) +\n  geom_point(alpha = 0.2,\n    position = position_jitterdodge(dodge.width = 0.75)) +\n  stat_summary(fun.data = mean_sdl,\n    position = position_dodge(width = 0.75))\np1\n\n\n\nWalk through construction of basic plots briefly. Encourage students to copy and paste code."
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#example-plot-2",
    "href": "2023/02-publication-quality-figs/slides.html#example-plot-2",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Example plot 2",
    "text": "Example plot 2\n\np2 &lt;-\n  ggplot(penguins,\n         aes(\n           x = flipper_length_mm,\n           y = bill_length_mm,\n           color = species,\n           fill = species,\n           shape = species\n         )) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\np2"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#example-plot-3",
    "href": "2023/02-publication-quality-figs/slides.html#example-plot-3",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Example plot 3",
    "text": "Example plot 3\n\np3 &lt;-\n  ggplot(penguins,\n         aes(\n           x = flipper_length_mm,\n           y = bill_depth_mm,\n           color = species,\n           fill = species,\n           shape = species\n         )) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\np3"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#color-palettes",
    "href": "2023/02-publication-quality-figs/slides.html#color-palettes",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Color Palettes",
    "text": "Color Palettes\nChoose a color palette that is:\n\nColorblind friendly\nGreyscale friendly\nPerceptually even\nHigh contrast (with background & within palette)"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#viridis",
    "href": "2023/02-publication-quality-figs/slides.html#viridis",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Viridis",
    "text": "Viridis\nThe viridis color palettes meet most of these criteria and are built-in to ggplot2. They are available with scale_fill_viridis_*() and scale_color_viridis_*() functions.\nv &lt;- ggplot(penguins,\n            aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) +\n  geom_point(size = 4)\nv #default colors\nv + scale_color_viridis_c() #viridis colors\n\n\n\n\n\n\nDefault color scale\n\n\n\n\n\n\n\nViridis color scale"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#viridis-variants",
    "href": "2023/02-publication-quality-figs/slides.html#viridis-variants",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Viridis variants",
    "text": "Viridis variants\nOther viridis palettes are available by changing option in the scale function\n\nCode\nv + scale_color_viridis_c(option = \"magma\")\nv + scale_color_viridis_c(option = \"inferno\")\nv + scale_color_viridis_c(option = \"plasma\")\nv + scale_color_viridis_c(option = \"cividis\")\nv + scale_color_viridis_c(option = \"rocket\")\nv + scale_color_viridis_c(option = \"mako\")\n\n\n\n\n\n\n\nmagma\n\n\n\n\n\n\n\ninferno\n\n\n\n\n\n\n\nplasma\n\n\n\n\n\n\n\n\n\ncividis\n\n\n\n\n\n\n\nrocket\n\n\n\n\n\n\n\nmako"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#viridis-customization",
    "href": "2023/02-publication-quality-figs/slides.html#viridis-customization",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Viridis customization",
    "text": "Viridis customization\nThe upper end of viridis palettes tends to be very bright yellow. You can limit the range of colors used with the begin and end arguments\nv + scale_color_viridis_c()\nv + scale_color_viridis_c(begin = 0.1, end = 0.9)"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#viridis-for-discrete-data",
    "href": "2023/02-publication-quality-figs/slides.html#viridis-for-discrete-data",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Viridis for discrete data",
    "text": "Viridis for discrete data\nThe viridis palette can be used for discrete / categorical data with scale_color_viridis_d().\n\np2 + scale_color_viridis_d(end = 0.9, option = \"C\")\n\n\n\n\n\n\n\n\nUh oh!\n\n\nThis only applied the new palette to the color aesthetic!"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#applying-palettes-to-multiple-aesthetics",
    "href": "2023/02-publication-quality-figs/slides.html#applying-palettes-to-multiple-aesthetics",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Applying palettes to multiple aesthetics",
    "text": "Applying palettes to multiple aesthetics\nUsually color and fill are mapped to the same data. You can add both scale_color_*() and scale_fill_*() to a plot OR you can use the aesthetics argument.\n\np2 + \n  scale_color_viridis_d(aesthetics = c(\"color\", \"fill\"), end = 0.9, option = \"C\")"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#other-color-palettes",
    "href": "2023/02-publication-quality-figs/slides.html#other-color-palettes",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Other color palettes",
    "text": "Other color palettes\nThere are many places to get additional color palettes.\nA few of my favorites:\n\n\ncolorspace 📦\ncols4all 📦\nComprehensive list of color palettes in r\n\n\n\n\n\n\n\n\nActivity\n\n\nLet’s find a palette we like using cols4all::4a_gui()"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#manual-color-palettes",
    "href": "2023/02-publication-quality-figs/slides.html#manual-color-palettes",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Manual color palettes",
    "text": "Manual color palettes\nYou can always use your own colors using scale_color_manual() if you know the hex codes.\n\nmy_cols &lt;- c(\"#B60A1C\",\"#E39802\",\"#309143\")\n\np2 + \n  scale_color_manual(values = my_cols, aesthetics = c(\"color\", \"fill\"))"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#manual-color-palettes-1",
    "href": "2023/02-publication-quality-figs/slides.html#manual-color-palettes-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Manual color palettes",
    "text": "Manual color palettes\nUse a named vector to specify which colors go with which factor level\n\nmy_cols &lt;- \n  c(\"Chinstrap\" = \"#B60A1C\", \"Gentoo\" = \"#E39802\", \"Adelie\" = \"#309143\")\np2 &lt;- p2 + \n  scale_color_manual(values = my_cols, aesthetics = c(\"color\", \"fill\"))\np3 &lt;- p3 +\n  scale_color_manual(values = my_cols, aesthetics = c(\"color\", \"fill\"))"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#legend-titles",
    "href": "2023/02-publication-quality-figs/slides.html#legend-titles",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Legend titles",
    "text": "Legend titles\nWe can set the name for scales a few ways: with labs() or with the name= argument of the scale.\n\np2 + labs(color = \"Penguin Species\")\n\n# Equivalent, but replaces existing color scale:\n# p2 + scale_color_discrete(name = \"Penguin Species\")"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#legend-titles-1",
    "href": "2023/02-publication-quality-figs/slides.html#legend-titles-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Legend titles",
    "text": "Legend titles\nLegends for scales with the same name will be combined if possible\n\n(p2 &lt;- \n  p2 + labs(color = \"Penguin Species\",\n            shape = \"Penguin Species\",\n            fill = \"Penguin Species\"))"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#legend-titles-2",
    "href": "2023/02-publication-quality-figs/slides.html#legend-titles-2",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Legend titles",
    "text": "Legend titles\nLet’s do the same for p3\n\n(p3 &lt;- \n  p3 + labs(color = \"Penguin Species\",\n            shape = \"Penguin Species\",\n            fill = \"Penguin Species\"))"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#legend-labels",
    "href": "2023/02-publication-quality-figs/slides.html#legend-labels",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Legend labels",
    "text": "Legend labels\nWhat if we want to use the Latin name for the penguin species? We can use the labels argument and a named vector.\n\nscinames &lt;- c(\"Adelie\" = \"P. adeliae\",\n              \"Chinstrap\" = \"P. antarticus\",\n              \"Gentoo\" = \"P. papua\")\np2 &lt;- p2 +\n  scale_color_manual(\n    values = my_cols,\n    labels = scinames,\n    aesthetics = c(\"color\", \"fill\")\n  ) +\n  scale_shape_discrete(labels = scinames)\n\np2"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#legend-labels-output",
    "href": "2023/02-publication-quality-figs/slides.html#legend-labels-output",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Legend labels",
    "text": "Legend labels"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#legend-labels-1",
    "href": "2023/02-publication-quality-figs/slides.html#legend-labels-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Legend labels",
    "text": "Legend labels\nLet’s do the same for p3\n\np3 &lt;- p3 +\n  scale_color_manual(\n    values = my_cols,\n    labels = scinames,\n    aesthetics = c(\"color\", \"fill\")\n  ) +\n  scale_shape_discrete(labels = scinames)\np3\n\n\n\n\n\n\n\n\nTip\n\n\nIf there are many aesthetics that map to the same variable, it might be easier to change the factor levels in the data once instead of inside of every scale"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#legend-labels-1-output",
    "href": "2023/02-publication-quality-figs/slides.html#legend-labels-1-output",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Legend labels",
    "text": "Legend labels"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#applying-what-we-learned",
    "href": "2023/02-publication-quality-figs/slides.html#applying-what-we-learned",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Applying what we learned",
    "text": "Applying what we learned\nLet’s apply what we learned to p1 to capitalize the words in the legend\n\nWhich scale_ function?\nWhich argument changes legend title?\nWhich argument changes labels?"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#applying-what-we-learned-1",
    "href": "2023/02-publication-quality-figs/slides.html#applying-what-we-learned-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Applying what we learned",
    "text": "Applying what we learned\n\np1 &lt;- p1 +\n  scale_shape(\n    name = \"Sex\",\n    labels = c(\"male\" = \"Male\", \"female\" = \"Female\")\n  )\np1\n\n\n\nCode auto-complete isn’t very helpful here because the only arguments to scale_shape() are … and solid. This is a good opportunity to talk about what … do and how to learn what arguments a function with … can take by looking at what function … are passed to in the help file."
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#axes-1",
    "href": "2023/02-publication-quality-figs/slides.html#axes-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Axes",
    "text": "Axes\nAxes are also a type of scale. In p1 the x-axis corresponds to scale_x_discrete() and the y-axis corresponds to scale_y_continuous()."
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#custom-labels",
    "href": "2023/02-publication-quality-figs/slides.html#custom-labels",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Custom labels",
    "text": "Custom labels\nUse what we learned before to customize the categorical x-axis labels in p1!\n\n(p1 &lt;- p1 + scale_x_discrete(name = \"Species\", labels = scinames))\n\n\n\nThe nice thing about ggplot2 is that it is designed around a grammar—once you learn how to do something once, you can usually apply it easily to new situations."
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#custom-labels-1",
    "href": "2023/02-publication-quality-figs/slides.html#custom-labels-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Custom labels",
    "text": "Custom labels\nIf you only want to change the axis title, you can also do that in labs()\n(p2 &lt;- p2 + labs(x = \"Flipper Length (mm)\", y = \"Bill Length (mm)\"))\n(p3 &lt;- p3 + labs(x = \"Flipper Length (mm)\", y = \"Bill Depth (mm)\"))"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#custom-breaks",
    "href": "2023/02-publication-quality-figs/slides.html#custom-breaks",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Custom breaks",
    "text": "Custom breaks\nChange the (approximate) number of breaks with n.breaks=\n\n(p1 &lt;- p1 + scale_y_continuous(name = \"Body Mass (g)\", n.breaks = 12))\n\n\n\nThis uses “pretty” breaks at whole numbers, so you don’t get exactly n.breaks"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#custom-breaks-1",
    "href": "2023/02-publication-quality-figs/slides.html#custom-breaks-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Custom breaks",
    "text": "Custom breaks\nSpecify breaks exactly with breaks=\n\np1 + scale_y_continuous(breaks = c(3333, 5000, 5555))"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#complete-themes",
    "href": "2023/02-publication-quality-figs/slides.html#complete-themes",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Complete themes",
    "text": "Complete themes\nThere are several complete themes built-in to ggplot2, and many more available from other packages such as ggthemes.\np2 + theme_bw()\np2 + theme_minimal()\n\n\n\n\n\n\ntheme_bw()\n\n\n\n\n\n\n\ntheme_minimal()"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#fonts",
    "href": "2023/02-publication-quality-figs/slides.html#fonts",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Fonts",
    "text": "Fonts\nYou can customize font size and family with complete themes.\n\np2 + theme_bw(base_size = 9, base_family = \"Times New Roman\")"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#custom-themes",
    "href": "2023/02-publication-quality-figs/slides.html#custom-themes",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Custom themes",
    "text": "Custom themes\nCustomizing themes “manually” involves knowing the name of the theme element and it’s corresponding element_*() function.\n\np1 + theme(axis.title = element_text(face = \"bold\", colour = \"red\"))\n\n\n\nTheme elements are hierarchical. E.g. title affects all title elements, axis.title affects all axis titles, axis.title.x only affects x-axis titles, and axis.title.x.bottom affects only the bottom x-axis title (in the case that there is a second x-axis on the top)."
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#custom-themes-1",
    "href": "2023/02-publication-quality-figs/slides.html#custom-themes-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Custom themes",
    "text": "Custom themes\nIt’s best to find a built-in theme_*() function that gets you most of the way there and then customize with theme()\n\np1 + \n  theme_minimal(base_size = 10) + \n  theme(axis.line = element_line(linewidth = 0.5, lineend = \"round\"))"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#custom-themes-2",
    "href": "2023/02-publication-quality-figs/slides.html#custom-themes-2",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Custom themes",
    "text": "Custom themes\n\n\n\n\n\n\nActivity\n\n\nName some things about the appearance of p1 that you want to change and we’ll figure it out together!\n\n\n\n\n\n\n\n\n\nTip\n\n\nCheck the examples in the help page for theme() https://ggplot2.tidyverse.org/reference/theme.html to figure out the names of theme elements"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#re-using-custom-themes",
    "href": "2023/02-publication-quality-figs/slides.html#re-using-custom-themes",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Re-using custom themes",
    "text": "Re-using custom themes\nYou can save a custom theme as an R object and supply it to your plots.\n\nmy_theme &lt;- \n  theme_minimal() + \n  theme(\n    axis.line = element_line(linewidth = 0.5, lineend = \"round\"),\n    axis.ticks = element_line(linewidth = 0.2),\n    legend.background = element_rect(linewidth = 0.2)\n  )\n\np2 + my_theme"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#re-using-custom-themes-1",
    "href": "2023/02-publication-quality-figs/slides.html#re-using-custom-themes-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Re-using custom themes",
    "text": "Re-using custom themes\nOr you can set your theme as the default at the top of your R script\n\ntheme_set(my_theme)\np3"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#combine-plots",
    "href": "2023/02-publication-quality-figs/slides.html#combine-plots",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Combine plots",
    "text": "Combine plots\nThe patchwork package makes it easy to combine ggplot2 plots\n\nlibrary(patchwork)\np1 + p2"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#control-layout",
    "href": "2023/02-publication-quality-figs/slides.html#control-layout",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Control layout",
    "text": "Control layout\n\n\n\n\n+ wraps plots\n| combines plots horizontally\n/ combines plots vertically\n() can be used to nest operations\n\n\n\n\np1 / (p2 | p3)"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#multi-panel-figures-1",
    "href": "2023/02-publication-quality-figs/slides.html#multi-panel-figures-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Multi-panel figures",
    "text": "Multi-panel figures\n\n\nplot_layout(guides = \"collect\") combines duplicate legends\nplot_annotation(tag_levels = \"a\") adds labels to sub-plots\n\n\n\np_combined &lt;-\n  p1 /\n  (p2 + p3 + plot_layout(guides = \"collect\")) + \n  plot_annotation(tag_levels = \"a\", tag_suffix = \")\")\np_combined"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#saving-plots-1",
    "href": "2023/02-publication-quality-figs/slides.html#saving-plots-1",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Saving plots",
    "text": "Saving plots\nIf you know the dimensions, it’s good to save plots early on and adjust theme to fit.\n\n\n\nggsave(\n  filename = \"penguins.png\",\n  plot = p_combined,\n  width = 7, \n  height = 5, \n  units = \"in\", \n  dpi = \"print\",\n  bg = \"white\"\n)\n\n\n\n\n\n\nThe file type is figured out based on the extension in filename.\nBy default, the last plot is the one saved, but it’s good practice to specify plot anyways\nDimensions can be specified in pixels, inches, mm, etc.\ndpi is resolution and only applies to raster images.\nbg sets background color. If you don’t set this, the background of your plot is often transparent, which might not be the best for adding to presentations.\nNotice how the legends and points look too large with these dimensions. It might be good to fix that."
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#raster-vs.-vector",
    "href": "2023/02-publication-quality-figs/slides.html#raster-vs.-vector",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Raster vs. Vector",
    "text": "Raster vs. Vector\n\n\nRaster images (e.g. .jpg, .png, .tiff) are made of pixels and the resolution can vary.\nVector images (e.g. .svg, .eps) are not made of pixels and don’t have a resolution.\nVector formats should be used whenever possible\n\n\n\n\n\n\n\n\nRaster (72 dpi .png file)\n\n\n\n\n\n\n\nVector (.svg file)\n\n\n\n\n\n\nOpen images in a new tab and zoom in on browser to demo the difference.\nVector formats are not only resolution-less, they are more compatible with screen readers and therefore more accessible."
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#finished-product",
    "href": "2023/02-publication-quality-figs/slides.html#finished-product",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Finished product!",
    "text": "Finished product!\n\nlibrary(tidyverse) #includes ggplot2\nlibrary(palmerpenguins) #for data\nlibrary(patchwork) #multi-panel figures\n\n# Custom theme\nmy_theme &lt;- \n  theme_minimal(base_size = 10) + \n  theme(\n    axis.line = element_line(linewidth = 0.5, lineend = \"round\"),\n    axis.ticks = element_line(linewidth = 0.2),\n    legend.background = element_rect(linewidth = 0.2)\n  )\ntheme_set(my_theme)\n\n# plot 1\n\n## Custom function for stat_summary\nmean_sd &lt;- function(x) {\n  data.frame(y = mean(x), ymin = mean(x) - sd(x), ymax = mean(x) + sd(x))\n}\n\n## For labeling with latin names\nscinames &lt;- c(\"Adelie\" = \"P. adeliae\",\n              \"Chinstrap\" = \"P. antarticus\",\n              \"Gentoo\" = \"P. papua\")\n\np1 &lt;-\n  ggplot(penguins |&gt; filter(!is.na(sex)),\n         aes(x = species, y = body_mass_g, shape = sex)) +\n  geom_point(alpha = 0.2,\n             position = position_jitterdodge(dodge.width = 0.75)) +\n  stat_summary(fun.data = mean_sd,\n               position = position_dodge(width = 0.75)) +\n  scale_x_discrete(labels = scinames) +\n  scale_y_continuous(n.breaks = 12) +\n  labs(x = \"Species\", y = \"Body Mass (g)\")\n\n# Color palette for plot 2 and 3\nmy_cols &lt;- \n  c(\"Chinstrap\" = \"#B60A1C\", \"Gentoo\" = \"#E39802\", \"Adelie\" = \"#309143\")\n\np2 &lt;-\n  ggplot(penguins,\n         aes(\n           x = flipper_length_mm,\n           y = bill_length_mm,\n           color = species,\n           fill = species,\n           shape = species\n         )) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_color_manual(\n    values = my_cols,\n    labels = scinames,\n    aesthetics = c(\"color\", \"fill\")\n  ) +\n  scale_shape_discrete(labels = scinames) +\n  labs(\n    color = \"Penguin Species\",\n    shape = \"Penguin Species\",\n    fill = \"Penguin Species\",\n    x = \"Flipper Length (mm)\",\n    y = \"Bill Length (mm)\"\n  )\n\np3 &lt;-\n  ggplot(penguins,\n         aes(\n           x = flipper_length_mm,\n           y = bill_depth_mm,\n           color = species,\n           fill = species,\n           shape = species\n         )) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_color_manual(\n    values = my_cols,\n    labels = scinames,\n    aesthetics = c(\"color\", \"fill\")\n  ) +\n  scale_shape_discrete(labels = scinames) +\n  labs(\n    color = \"Penguin Species\",\n    shape = \"Penguin Species\",\n    fill = \"Penguin Species\",\n    x = \"Flipper Length (mm)\",\n    y = \"Bill Length (mm)\"\n  )\n\n# combine into multi-panel figure\np_combined &lt;-\n  p1 /\n  (p2 + p3 + plot_layout(guides = \"collect\")) + \n  plot_annotation(tag_levels = \"a\", tag_suffix = \")\")\n\np_combined"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#finished-product-output",
    "href": "2023/02-publication-quality-figs/slides.html#finished-product-output",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Finished product!",
    "text": "Finished product!"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#getting-help",
    "href": "2023/02-publication-quality-figs/slides.html#getting-help",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Getting help",
    "text": "Getting help\n\n\nThe ggplot2 documentation itself, in particular the examples on the theme() page and the FAQ on customization.\nThe R Graph Gallery has a wide variety of plots with R code walkthroughs.\nThe ggplot2 book: https://ggplot2-book.org/\n\n\nYou can always come by our drop-in hours to ask questions as well!"
  },
  {
    "objectID": "2023/02-publication-quality-figs/slides.html#part-3-in-two-weeks",
    "href": "2023/02-publication-quality-figs/slides.html#part-3-in-two-weeks",
    "title": "Crafting Publication Quality Data Visualizations with ggplot2",
    "section": "Part 3 in two weeks!",
    "text": "Part 3 in two weeks!\n“Exploring the wide world of ggplot2 extensions”\n🗓️ June 26\n⌚️ 11:00am–1:00pm\nRegistration\n\n\n\n\nIntermediate ggplot2 workshop series"
  },
  {
    "objectID": "2023/03-extensions/notes.html",
    "href": "2023/03-extensions/notes.html",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(ggplot2)"
  },
  {
    "objectID": "2023/03-extensions/notes.html#gganimate",
    "href": "2023/03-extensions/notes.html#gganimate",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "gganimate",
    "text": "gganimate\n\nlibrary(gganimate)\n\n\nAnimate plots and save as gifs\nTakes some getting used to lingo\nCan control: what changes over time with transition_*, how the view of the axes changes with view_*, how much “memory” of the change there is, with shadow_*, and how data appears and disappears with enter_* and exit_*\nUse ? with functions to figure out what label name is\nThese penguin plots don’t really make sense because the data isn’t same individuals over the years; should set group in transition_states\nMention animate() for more control\n\nResources:\n\nBat data slides\nPenguins code source"
  },
  {
    "objectID": "2023/03-extensions/notes.html#esquisse",
    "href": "2023/03-extensions/notes.html#esquisse",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "esquisse",
    "text": "esquisse\n\nlibrary(esquisse)\nlibrary(dplyr)\n\n\n“Esquisse” means rough first sketch in French\nesquisse vignette\nPoint and click to generate ggplot plots from data\nGood for exploring datasets (look at data too)\nStill have to modify dataset outside of tool, e.g., recoding factors\n\n\npenguins &lt;- penguins %&gt;% na.omit()\nesquisser(penguins)\n\n\nHelpful things: color codes variables, suggests plot types\nSave plot as image file, or copy and paste code into console (uses tidyverse)\nCan add to Shiny app to let non-R users create ggplots of data"
  },
  {
    "objectID": "2023/03-extensions/notes.html#plotly",
    "href": "2023/03-extensions/notes.html#plotly",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "plotly",
    "text": "plotly\n\nlibrary(plotly)\n\n\nplotly R package is interface to a JavaScript library for making interactive data visualizations\nOnly important to know that because if you search for plotly help, sometimes you’ll get JavaScript code examples.\nplotly kind of uses the grammar of graphics, but building a plot from scratch is tricky\nplotly functions mostly take lists are arguments, which makes it very difficult to figure out what default values are or even what arguments functions can take.\nggplotly() transforms ggplot objects into interactive plotly plots. 90% of the time it gets you 90% of the way there\n\n\np &lt;- \n  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point() +\n  labs(x = \"Bill length (mm)\", y = \"Bill depth (mm)\", color = \"Penguin Species\") +\n  theme_bw()\n\nggplotly(p)\n\nBy default, you get:\n\nDrag a box to zoom, double-click to zoom out\nTooltips on hover\nAbility to hide and show points by clicking on the legend\nToolbar with tools including ability to download a PNG of the plot\n\nThis works in R Markdown or Quarto documents (i.e. there’s not a way to make these plots “stand-alone”—they’re rendered as HTML)\nTypes of plots\nWorks for most (all?) built-in geoms. Works for some plots made with ggplot2 extensions also. Demo a few different geoms like geom_boxplot(), geom_hisotgram(), geom_smooth()\nCustomize tooltip\nYou can customize the info displayed in the tooltip with ggplotly . Give it additional aesthetic text to include something only as a tooltip.\n\np &lt;- \n  ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  #Ignore unknown aesthetics warning\n  geom_point(aes(text = sex)) +\n  labs(x = \"Bill length (mm)\", y = \"Bill depth (mm)\", color = \"Penguin Species\") +\n  theme_bw()\n\nggplotly(p, tooltip = c(\"text\", \"bill_depth_mm\", \"bill_length_mm\"))\n\nAnimations\nYou can use ggplotly() to make interactive animated plots by using the frame aesthetic\n\nlibrary(gapminder) #dataset\nhead(gapminder)\np2 &lt;- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +\n  geom_point(aes(size = pop, frame = year, ids = country)) +\n  scale_x_log10()\n\nggplotly(p2)"
  },
  {
    "objectID": "2023/03-extensions/notes.html#ggrepel",
    "href": "2023/03-extensions/notes.html#ggrepel",
    "title": "Exploring the Wide World of ggplot2 Extensions",
    "section": "ggrepel",
    "text": "ggrepel\nThe ggrepel package is helpful for directly labeling plots, especially when labels would otherwise overlap.\n\n#make rownames into columns\ndat &lt;- mtcars |&gt; tibble::rownames_to_column(var = \"car\")\ndat\np3 &lt;- \n  ggplot(dat,\n  aes(wt, mpg, label = car, colour = factor(cyl))) +\n  geom_point()\n#without ggrepel\np3 + geom_text()\np3 + geom_label()\nlibrary(ggrepel)\np3 + geom_text_repel()\np3 + geom_label_repel()\n\nAdjust appearance of labels\nBy default, little segments are drawn connecting labels to points only when labels are far enough away. This can be adjusted.\n\np3 + geom_label_repel(min.segment.length = 0)\n\nOverlapping labels\nYou see a warning about labels being removed due to overlaps. Make text smaller, plot larger, adjust max.overlaps , force labels further apart, make it try harder to find positions that don’t overlap.\n\n#don't usually need to do all of these things, but they're some options\np4 &lt;- \n  p3 + \n  geom_label_repel(\n    min.segment.length = 0,\n    #smaller labels\n    size = 3, \n    label.padding = 0.15,\n    #draw labels even if overlapping with things\n    max.overlaps = 15, #default is 10, increase to get more labels drawn\n    #force labels further from point\n    force = 5,\n    #ask it to try harder\n    max.time = 2,\n    max.iter = 15000,\n    show.legend = FALSE\n  )\np4\n\nLabels are random\nLabels are positioned randomly, so they’re different every time a plot is rendered\np4\np4\n\n\n\nYou can set.seed() at the top of your script to ensure reproducibility.\nset.seed(123)\np4\nset.seed(123)\np4\n\n\n\nLabel just some points\nYou can label just select points\n\ncars &lt;- c(\"Volvo 142E\", \"Merc 230\")\nggplot(dat, aes(wt, mpg, label = ifelse(car %in% cars, car, \"\"))) +\n  geom_point(color = \"red\") +\n  geom_label_repel(min.segment.length = 0, nudge_x = 0.5, nudge_y = 3)"
  },
  {
    "objectID": "2024/01-foundations/index.html",
    "href": "2024/01-foundations/index.html",
    "title": "Foundations of ggplot2",
    "section": "",
    "text": "Date & time: Thursday June 6, 2024, 11am - 1pm AZ\nInstructor: Eric Scott\nIn this workshop you’ll gain a better understanding of the “grammar of graphics”—the theory underlying many data visualization tools, including ggplot2. Using practical examples, you’ll learn how understanding the grammar of graphics can help you build more creative, complex, information-rich visualizations.\nRegistration\nPrerequisites:\n\nInstall R, RStudio, and ggplot2\nSome previous usage of ggplot2",
    "crumbs": [
      "Upcoming series",
      "Session 1 - Foundations"
    ]
  },
  {
    "objectID": "2024/01-foundations/slides.html#hello",
    "href": "2024/01-foundations/slides.html#hello",
    "title": "Slides!",
    "section": "Hello",
    "text": "Hello\nthese are slides\n\n\n\n\nIntermediate ggplot2 workshop series"
  },
  {
    "objectID": "2024/03-extensions/index.html",
    "href": "2024/03-extensions/index.html",
    "title": "Exploring The Wide World of ggplot2 Extensions",
    "section": "",
    "text": "Date & time: Thursday June 20, 2024, 11am - 1pm AZ\nInstructor: Eric Scott, Renata Diaz, Kristina Riemer\nIn this workshop you’ll gain a better understanding of the “grammar of graphics”—the theory underlying many data visualization tools, including ggplot2. Using practical examples, you’ll learn how understanding the grammar of graphics can help you build more creative, complex, information-rich visualizations.\nRegistration\nPrerequisites:\n\nInstall R, RStudio, and ggplot2\nSome previous usage of ggplot2",
    "crumbs": [
      "Upcoming series",
      "Session 3 - Extensions"
    ]
  }
]