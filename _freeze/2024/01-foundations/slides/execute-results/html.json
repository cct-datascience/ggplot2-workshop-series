{
  "hash": "219013401dcbe82f5a81b3dfe04cee0c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Foundations of {ggplot2}\nauthor: Eric R Scott\nformat: \n  uaz-revealjs:\n  # revealjs:\n    incremental: true\nbibliography: references.bib\n---\n\n\n## Learning Objectives\n\n\n\n\n\n-   Learn about the most recent changes in `ggplot2`\n-   Understand the \"grammar of graphics\" and how it inspired `ggplot2`'s design\n-   Know what it means to \"map data to aesthetics\"\n-   Understand the relationship between a \"geom\" and a \"stat\"\n\n------------------------------------------------------------------------\n\n![](https://media.springernature.com/w316/springer-static/cover-hires/book/978-0-387-28695-2?as=webp){fig-align=\"center\"}\n\n## A Grammar of Graphics\n\n-   A book by @wilkinson2005\n-   Inspired the development of *many* graphics programs including `ggplot2` [@wickham2010]\n-   Alternative to having a function for every kind of plot\n-   A framework for layering elements to create any kind of plot\n\n## Grammar of Graphics Components\n\n\n\n\n\n::: columns\n::: {.column width=\"50%\"}\n::: nonincremental\n1.  Data\n2.  Aesthetics\n3.  Scales\n4.  Geometric Objects\n5.  Statistics\n6.  Facets\n7.  Coordinate System\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-3-1.png){width=432}\n:::\n:::\n\n:::\n:::\n\n## Data\n\n::: columns\n::: {.column width=\"50%\"}\nWhat is being visualized?\n\n-   344 observations\n\n-   body mass measured in grams\n\n-   bill length measured in mm\n\n-   three species\n\n-   three islands\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-4-1.png){width=432}\n:::\n:::\n\n:::\n:::\n\n## Aesthetics\n\n::: columns\n::: {.column width=\"50%\"}\nWhat visual elements are used to encode data?\n\n-   Color\n\n-   x position\n\n-   y position\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-5-1.png){width=432}\n:::\n:::\n\n:::\n:::\n\n## Scales\n\n::: columns\n::: {.column width=\"50%\"}\nWhat range of values is visualized?\nAre values continuous or discrete?\nHow is that range broken up visually?\n\n-   x-axis continuous from 2700 - 6300 , 4 major breaks\n\n-   y-axis continuous from 32.1 - 59.6 , 3 major breaks\n\n-   colors are discrete: red, green, blue\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-6-1.png){width=432}\n:::\n:::\n\n:::\n:::\n\n## Geometric Objects (\"geoms\")\n\n::: columns\n::: {.column width=\"50%\"}\nHow are data represented visually?\n\n-   Data is represented using circles/points\n-   Trend is represented as a line\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-7-1.png){width=432}\n:::\n:::\n\n:::\n:::\n\n::: notes\nBoth aesthetics and geoms are related to the visual representation of data.\nTo distinguish aesthetics and geoms, think about how geoms can have *many* aesthetics.\nE.g. points have position, shape, size, color, and transparency and different data could be mapped to each of those aesthetics.\n:::\n\n## Statistics (\"stats\")\n\n::: columns\n::: {.column width=\"50%\"}\nWhat calculations or transformations need to be done to present the data?\n\n-   For points, none (stat = \"identity\")\n\n-   For trend lines, linear regression\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-8-1.png){width=432}\n:::\n:::\n\n:::\n:::\n\n## Facets\n\n::: columns\n::: {.column width=\"50%\"}\nBy what variable are different subsets of the data split apart into \"small multiples\"?\n\n-   Faceted by island\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-9-1.png){width=432}\n:::\n:::\n\n:::\n:::\n\n## Coordinate System\n\n::: columns\n::: {.column width=\"50%\"}\nHow are positions represented visually?\n\n-   Cartesian coordinates\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-10-1.png){width=432}\n:::\n:::\n\n:::\n:::\n\n::: notes\nOther options include polar coordinates or the many possible coordinate systems used in maps.\n:::\n\n## Practice\n\nIdentify each of the seven components of this plot\n\n::: columns\n::: {.column width=\"50%\"}\n::: nonincremental\n1.  Data\n2.  Aesthetics\n3.  Scales\n4.  Geometric Objects\n5.  Statistics\n6.  Facets\n7.  Coordinate System\n:::\n:::\n\n::: {.column width=\"50%\"}\n[![](https://s3.eu-west-1.amazonaws.com/static.gapminder.org/GapminderMedia/wp-uploads/20161215191134/countries_health_wealth_2016_v13.jpg){fig-align=\"center\"}](https://www.gapminder.org/tag/chart/)\n:::\n:::\n\n## Break ‚è∞\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_0c6a0eb5\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;left:0;font-size:5em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## How `ggplot2` implements the 7 components\n\ngo through each component again, but highlight code on left and incrementally build plot on right (or something like that).\nThings you *could* demonstrate for each component:\n\n1.  Data: using different data for different geoms\n2.  Aesthetics: ??\n3.  Scales: manual breaks, transformations\n4.  Geoms: how each geom has a default stat, how to figure out which aesthetics a geom has\n5.  Stats: how each stat has a default geom, `stat_summary()`\n6.  Facets: `facet_wrap` vs `facet_grid`, free scales\n7.  Coords: how adjusting limits here is different from in scales, polar coords, `coord_sf`\n\n## References\n\n::: refs\n:::\n",
    "supporting": [
      "slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}